{"$message_type":"diagnostic","message":"missing generics for struct `oracle::Oracle`","code":{"code":"E0107","explanation":"An incorrect number of generic arguments was provided.\n\nErroneous code example:\n\n```compile_fail,E0107\nstruct Foo<T> { x: T }\n\nstruct Bar { x: Foo }             // error: wrong number of type arguments:\n                                  //        expected 1, found 0\nstruct Baz<S, T> { x: Foo<S, T> } // error: wrong number of type arguments:\n                                  //        expected 1, found 2\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool>(x);                 // error: wrong number of type arguments:\n                                    //        expected 2, found 1\n    foo::<bool, i32, i32>(x, 2, 4); // error: wrong number of type arguments:\n                                    //        expected 2, found 3\n    f::<'static>();                 // error: wrong number of lifetime arguments\n                                    //        expected 0, found 1\n}\n```\n\nWhen using/declaring an item with generic arguments, you must provide the exact\nsame number:\n\n```\nstruct Foo<T> { x: T }\n\nstruct Bar<T> { x: Foo<T> }               // ok!\nstruct Baz<S, T> { x: Foo<S>, y: Foo<T> } // ok!\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool, u32>(x, 12);              // ok!\n    f();                                  // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":6516,"byte_end":6522,"line_start":216,"line_end":216,"column_start":24,"column_end":30,"is_primary":true,"text":[{"text":"    let ast_nodes: Vec<Oracle::AstNodeInfo> = data","highlight_start":24,"highlight_end":30}],"label":"expected 1 generic argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"struct defined here, with 1 generic parameter: `M`","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":184,"byte_end":5647,"line_start":8,"line_end":189,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"abigen!(","highlight_start":1,"highlight_end":9},{"text":"    Oracle,","highlight_start":1,"highlight_end":12},{"text":"    r#\"[","highlight_start":1,"highlight_end":9},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"constructor\",","highlight_start":1,"highlight_end":35},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"stateMutability\": \"nonpayable\"","highlight_start":1,"highlight_end":44},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"FEE\",","highlight_start":1,"highlight_end":27},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"\",","highlight_start":1,"highlight_end":32},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"admin\",","highlight_start":1,"highlight_end":29},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"\",","highlight_start":1,"highlight_end":32},{"text":"                    \"type\": \"address\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"address\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"adminComputeResult\",","highlight_start":1,"highlight_end":42},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"computeId\",","highlight_start":1,"highlight_end":41},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"callback\",","highlight_start":1,"highlight_end":32},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"astnodes\",","highlight_start":1,"highlight_end":40},{"text":"                    \"type\": \"tuple[]\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"struct AstNode.Info[]\",","highlight_start":1,"highlight_end":61},{"text":"                    \"components\": [","highlight_start":1,"highlight_end":36},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"nodeType\",","highlight_start":1,"highlight_end":48},{"text":"                            \"type\": \"uint8\",","highlight_start":1,"highlight_end":45},{"text":"                            \"internalType\": \"enum AstNode.NodeType\"","highlight_start":1,"highlight_end":68},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"value\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"string\",","highlight_start":1,"highlight_end":46},{"text":"                            \"internalType\": \"string\"","highlight_start":1,"highlight_end":53},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"left\",","highlight_start":1,"highlight_end":44},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"right\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    ]","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"outputs\": [],","highlight_start":1,"highlight_end":27},{"text":"            \"stateMutability\": \"nonpayable\"","highlight_start":1,"highlight_end":44},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"compute\",","highlight_start":1,"highlight_end":31},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"astnodes\",","highlight_start":1,"highlight_end":40},{"text":"                    \"type\": \"tuple[]\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"struct AstNode.Info[]\",","highlight_start":1,"highlight_end":61},{"text":"                    \"components\": [","highlight_start":1,"highlight_end":36},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"nodeType\",","highlight_start":1,"highlight_end":48},{"text":"                            \"type\": \"uint8\",","highlight_start":1,"highlight_end":45},{"text":"                            \"internalType\": \"enum AstNode.NodeType\"","highlight_start":1,"highlight_end":68},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"value\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"string\",","highlight_start":1,"highlight_end":46},{"text":"                            \"internalType\": \"string\"","highlight_start":1,"highlight_end":53},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"left\",","highlight_start":1,"highlight_end":44},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"right\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    ]","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"payable\"","highlight_start":1,"highlight_end":41},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"computeId\",","highlight_start":1,"highlight_end":33},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"\",","highlight_start":1,"highlight_end":32},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"event\",","highlight_start":1,"highlight_end":29},{"text":"            \"name\": \"AdminCompute\",","highlight_start":1,"highlight_end":36},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"computeId\",","highlight_start":1,"highlight_end":41},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": true,","highlight_start":1,"highlight_end":37},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": false,","highlight_start":1,"highlight_end":38},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"anonymous\": false","highlight_start":1,"highlight_end":31},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"event\",","highlight_start":1,"highlight_end":29},{"text":"            \"name\": \"UserCompute\",","highlight_start":1,"highlight_end":35},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"userAddress\",","highlight_start":1,"highlight_end":43},{"text":"                    \"type\": \"address\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": true,","highlight_start":1,"highlight_end":37},{"text":"                    \"internalType\": \"address\"","highlight_start":1,"highlight_end":46},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": false,","highlight_start":1,"highlight_end":38},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"anonymous\": false","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ]\"#","highlight_start":1,"highlight_end":8},{"text":");","highlight_start":1,"highlight_end":2}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":184,"byte_end":5647,"line_start":8,"line_end":189,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"abigen!(","highlight_start":1,"highlight_end":9},{"text":"    Oracle,","highlight_start":1,"highlight_end":12},{"text":"    r#\"[","highlight_start":1,"highlight_end":9},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"constructor\",","highlight_start":1,"highlight_end":35},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"stateMutability\": \"nonpayable\"","highlight_start":1,"highlight_end":44},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"FEE\",","highlight_start":1,"highlight_end":27},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"\",","highlight_start":1,"highlight_end":32},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"admin\",","highlight_start":1,"highlight_end":29},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"\",","highlight_start":1,"highlight_end":32},{"text":"                    \"type\": \"address\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"address\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"adminComputeResult\",","highlight_start":1,"highlight_end":42},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"computeId\",","highlight_start":1,"highlight_end":41},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"callback\",","highlight_start":1,"highlight_end":32},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"astnodes\",","highlight_start":1,"highlight_end":40},{"text":"                    \"type\": \"tuple[]\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"struct AstNode.Info[]\",","highlight_start":1,"highlight_end":61},{"text":"                    \"components\": [","highlight_start":1,"highlight_end":36},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"nodeType\",","highlight_start":1,"highlight_end":48},{"text":"                            \"type\": \"uint8\",","highlight_start":1,"highlight_end":45},{"text":"                            \"internalType\": \"enum AstNode.NodeType\"","highlight_start":1,"highlight_end":68},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"value\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"string\",","highlight_start":1,"highlight_end":46},{"text":"                            \"internalType\": \"string\"","highlight_start":1,"highlight_end":53},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"left\",","highlight_start":1,"highlight_end":44},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"right\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    ]","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"outputs\": [],","highlight_start":1,"highlight_end":27},{"text":"            \"stateMutability\": \"nonpayable\"","highlight_start":1,"highlight_end":44},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"compute\",","highlight_start":1,"highlight_end":31},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"astnodes\",","highlight_start":1,"highlight_end":40},{"text":"                    \"type\": \"tuple[]\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"struct AstNode.Info[]\",","highlight_start":1,"highlight_end":61},{"text":"                    \"components\": [","highlight_start":1,"highlight_end":36},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"nodeType\",","highlight_start":1,"highlight_end":48},{"text":"                            \"type\": \"uint8\",","highlight_start":1,"highlight_end":45},{"text":"                            \"internalType\": \"enum AstNode.NodeType\"","highlight_start":1,"highlight_end":68},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"value\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"string\",","highlight_start":1,"highlight_end":46},{"text":"                            \"internalType\": \"string\"","highlight_start":1,"highlight_end":53},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"left\",","highlight_start":1,"highlight_end":44},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"right\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    ]","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"payable\"","highlight_start":1,"highlight_end":41},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"computeId\",","highlight_start":1,"highlight_end":33},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"\",","highlight_start":1,"highlight_end":32},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"event\",","highlight_start":1,"highlight_end":29},{"text":"            \"name\": \"AdminCompute\",","highlight_start":1,"highlight_end":36},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"computeId\",","highlight_start":1,"highlight_end":41},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": true,","highlight_start":1,"highlight_end":37},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": false,","highlight_start":1,"highlight_end":38},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"anonymous\": false","highlight_start":1,"highlight_end":31},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"event\",","highlight_start":1,"highlight_end":29},{"text":"            \"name\": \"UserCompute\",","highlight_start":1,"highlight_end":35},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"userAddress\",","highlight_start":1,"highlight_end":43},{"text":"                    \"type\": \"address\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": true,","highlight_start":1,"highlight_end":37},{"text":"                    \"internalType\": \"address\"","highlight_start":1,"highlight_end":46},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": false,","highlight_start":1,"highlight_end":38},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"anonymous\": false","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ]\"#","highlight_start":1,"highlight_end":8},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"abigen!","def_site_span":{"file_name":"/Users/rayer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ethers-contract-derive-2.0.14/src/lib.rs","byte_start":3723,"byte_end":3771,"line_start":114,"line_end":114,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"pub fn abigen(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":197,"byte_end":203,"line_start":9,"line_end":9,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    Oracle,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"add missing generic argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":6522,"byte_end":6522,"line_start":216,"line_end":216,"column_start":30,"column_end":30,"is_primary":true,"text":[{"text":"    let ast_nodes: Vec<Oracle::AstNodeInfo> = data","highlight_start":30,"highlight_end":30}],"label":null,"suggested_replacement":"<M>","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0107]\u001b[0m\u001b[0m\u001b[1m: missing generics for struct `oracle::Oracle`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:216:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let ast_nodes: Vec<Oracle::AstNodeInfo> = data\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 1 generic argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: struct defined here, with 1 generic parameter: `M`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:9:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mabigen!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Oracle,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    r#\"[\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ]\"#\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: add missing generic argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let ast_nodes: Vec<Oracle\u001b[0m\u001b[0m\u001b[38;5;10m<M>\u001b[0m\u001b[0m::AstNodeInfo> = data\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct takes 1 generic argument but 2 generic arguments were supplied","code":{"code":"E0107","explanation":"An incorrect number of generic arguments was provided.\n\nErroneous code example:\n\n```compile_fail,E0107\nstruct Foo<T> { x: T }\n\nstruct Bar { x: Foo }             // error: wrong number of type arguments:\n                                  //        expected 1, found 0\nstruct Baz<S, T> { x: Foo<S, T> } // error: wrong number of type arguments:\n                                  //        expected 1, found 2\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool>(x);                 // error: wrong number of type arguments:\n                                    //        expected 2, found 1\n    foo::<bool, i32, i32>(x, 2, 4); // error: wrong number of type arguments:\n                                    //        expected 2, found 3\n    f::<'static>();                 // error: wrong number of lifetime arguments\n                                    //        expected 0, found 1\n}\n```\n\nWhen using/declaring an item with generic arguments, you must provide the exact\nsame number:\n\n```\nstruct Foo<T> { x: T }\n\nstruct Bar<T> { x: Foo<T> }               // ok!\nstruct Baz<S, T> { x: Foo<S>, y: Foo<T> } // ok!\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool, u32>(x, 12);              // ok!\n    f();                                  // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":6330,"byte_end":6336,"line_start":213,"line_end":213,"column_start":20,"column_end":26,"is_primary":true,"text":[{"text":"    let contract = Oracle::<SignerMiddleware<Provider<Http>>, SignerMiddleware<Provider<Http>>>::new(contract_address, client.clone());","highlight_start":20,"highlight_end":26}],"label":"expected 1 generic argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"struct defined here, with 1 generic parameter: `M`","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":184,"byte_end":5647,"line_start":8,"line_end":189,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"abigen!(","highlight_start":1,"highlight_end":9},{"text":"    Oracle,","highlight_start":1,"highlight_end":12},{"text":"    r#\"[","highlight_start":1,"highlight_end":9},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"constructor\",","highlight_start":1,"highlight_end":35},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"stateMutability\": \"nonpayable\"","highlight_start":1,"highlight_end":44},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"FEE\",","highlight_start":1,"highlight_end":27},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"\",","highlight_start":1,"highlight_end":32},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"admin\",","highlight_start":1,"highlight_end":29},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"\",","highlight_start":1,"highlight_end":32},{"text":"                    \"type\": \"address\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"address\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"adminComputeResult\",","highlight_start":1,"highlight_end":42},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"computeId\",","highlight_start":1,"highlight_end":41},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"callback\",","highlight_start":1,"highlight_end":32},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"astnodes\",","highlight_start":1,"highlight_end":40},{"text":"                    \"type\": \"tuple[]\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"struct AstNode.Info[]\",","highlight_start":1,"highlight_end":61},{"text":"                    \"components\": [","highlight_start":1,"highlight_end":36},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"nodeType\",","highlight_start":1,"highlight_end":48},{"text":"                            \"type\": \"uint8\",","highlight_start":1,"highlight_end":45},{"text":"                            \"internalType\": \"enum AstNode.NodeType\"","highlight_start":1,"highlight_end":68},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"value\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"string\",","highlight_start":1,"highlight_end":46},{"text":"                            \"internalType\": \"string\"","highlight_start":1,"highlight_end":53},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"left\",","highlight_start":1,"highlight_end":44},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"right\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    ]","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"outputs\": [],","highlight_start":1,"highlight_end":27},{"text":"            \"stateMutability\": \"nonpayable\"","highlight_start":1,"highlight_end":44},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"compute\",","highlight_start":1,"highlight_end":31},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"astnodes\",","highlight_start":1,"highlight_end":40},{"text":"                    \"type\": \"tuple[]\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"struct AstNode.Info[]\",","highlight_start":1,"highlight_end":61},{"text":"                    \"components\": [","highlight_start":1,"highlight_end":36},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"nodeType\",","highlight_start":1,"highlight_end":48},{"text":"                            \"type\": \"uint8\",","highlight_start":1,"highlight_end":45},{"text":"                            \"internalType\": \"enum AstNode.NodeType\"","highlight_start":1,"highlight_end":68},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"value\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"string\",","highlight_start":1,"highlight_end":46},{"text":"                            \"internalType\": \"string\"","highlight_start":1,"highlight_end":53},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"left\",","highlight_start":1,"highlight_end":44},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"right\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    ]","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"payable\"","highlight_start":1,"highlight_end":41},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"computeId\",","highlight_start":1,"highlight_end":33},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"\",","highlight_start":1,"highlight_end":32},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"event\",","highlight_start":1,"highlight_end":29},{"text":"            \"name\": \"AdminCompute\",","highlight_start":1,"highlight_end":36},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"computeId\",","highlight_start":1,"highlight_end":41},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": true,","highlight_start":1,"highlight_end":37},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": false,","highlight_start":1,"highlight_end":38},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"anonymous\": false","highlight_start":1,"highlight_end":31},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"event\",","highlight_start":1,"highlight_end":29},{"text":"            \"name\": \"UserCompute\",","highlight_start":1,"highlight_end":35},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"userAddress\",","highlight_start":1,"highlight_end":43},{"text":"                    \"type\": \"address\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": true,","highlight_start":1,"highlight_end":37},{"text":"                    \"internalType\": \"address\"","highlight_start":1,"highlight_end":46},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": false,","highlight_start":1,"highlight_end":38},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"anonymous\": false","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ]\"#","highlight_start":1,"highlight_end":8},{"text":");","highlight_start":1,"highlight_end":2}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":184,"byte_end":5647,"line_start":8,"line_end":189,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"abigen!(","highlight_start":1,"highlight_end":9},{"text":"    Oracle,","highlight_start":1,"highlight_end":12},{"text":"    r#\"[","highlight_start":1,"highlight_end":9},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"constructor\",","highlight_start":1,"highlight_end":35},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"stateMutability\": \"nonpayable\"","highlight_start":1,"highlight_end":44},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"FEE\",","highlight_start":1,"highlight_end":27},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"\",","highlight_start":1,"highlight_end":32},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"admin\",","highlight_start":1,"highlight_end":29},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"\",","highlight_start":1,"highlight_end":32},{"text":"                    \"type\": \"address\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"address\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"adminComputeResult\",","highlight_start":1,"highlight_end":42},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"computeId\",","highlight_start":1,"highlight_end":41},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"callback\",","highlight_start":1,"highlight_end":32},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"astnodes\",","highlight_start":1,"highlight_end":40},{"text":"                    \"type\": \"tuple[]\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"struct AstNode.Info[]\",","highlight_start":1,"highlight_end":61},{"text":"                    \"components\": [","highlight_start":1,"highlight_end":36},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"nodeType\",","highlight_start":1,"highlight_end":48},{"text":"                            \"type\": \"uint8\",","highlight_start":1,"highlight_end":45},{"text":"                            \"internalType\": \"enum AstNode.NodeType\"","highlight_start":1,"highlight_end":68},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"value\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"string\",","highlight_start":1,"highlight_end":46},{"text":"                            \"internalType\": \"string\"","highlight_start":1,"highlight_end":53},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"left\",","highlight_start":1,"highlight_end":44},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"right\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    ]","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"outputs\": [],","highlight_start":1,"highlight_end":27},{"text":"            \"stateMutability\": \"nonpayable\"","highlight_start":1,"highlight_end":44},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"compute\",","highlight_start":1,"highlight_end":31},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"astnodes\",","highlight_start":1,"highlight_end":40},{"text":"                    \"type\": \"tuple[]\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"struct AstNode.Info[]\",","highlight_start":1,"highlight_end":61},{"text":"                    \"components\": [","highlight_start":1,"highlight_end":36},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"nodeType\",","highlight_start":1,"highlight_end":48},{"text":"                            \"type\": \"uint8\",","highlight_start":1,"highlight_end":45},{"text":"                            \"internalType\": \"enum AstNode.NodeType\"","highlight_start":1,"highlight_end":68},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"value\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"string\",","highlight_start":1,"highlight_end":46},{"text":"                            \"internalType\": \"string\"","highlight_start":1,"highlight_end":53},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"left\",","highlight_start":1,"highlight_end":44},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"right\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    ]","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"payable\"","highlight_start":1,"highlight_end":41},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"computeId\",","highlight_start":1,"highlight_end":33},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"\",","highlight_start":1,"highlight_end":32},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"event\",","highlight_start":1,"highlight_end":29},{"text":"            \"name\": \"AdminCompute\",","highlight_start":1,"highlight_end":36},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"computeId\",","highlight_start":1,"highlight_end":41},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": true,","highlight_start":1,"highlight_end":37},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": false,","highlight_start":1,"highlight_end":38},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"anonymous\": false","highlight_start":1,"highlight_end":31},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"event\",","highlight_start":1,"highlight_end":29},{"text":"            \"name\": \"UserCompute\",","highlight_start":1,"highlight_end":35},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"userAddress\",","highlight_start":1,"highlight_end":43},{"text":"                    \"type\": \"address\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": true,","highlight_start":1,"highlight_end":37},{"text":"                    \"internalType\": \"address\"","highlight_start":1,"highlight_end":46},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": false,","highlight_start":1,"highlight_end":38},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"anonymous\": false","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ]\"#","highlight_start":1,"highlight_end":8},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"abigen!","def_site_span":{"file_name":"/Users/rayer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ethers-contract-derive-2.0.14/src/lib.rs","byte_start":3723,"byte_end":3771,"line_start":114,"line_end":114,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"pub fn abigen(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":197,"byte_end":203,"line_start":9,"line_end":9,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    Oracle,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove this generic argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":6373,"byte_end":6405,"line_start":213,"line_end":213,"column_start":63,"column_end":95,"is_primary":true,"text":[{"text":"    let contract = Oracle::<SignerMiddleware<Provider<Http>>, SignerMiddleware<Provider<Http>>>::new(contract_address, client.clone());","highlight_start":63,"highlight_end":95}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0107]\u001b[0m\u001b[0m\u001b[1m: struct takes 1 generic argument but 2 generic arguments were supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:213:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m213\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let contract = Oracle::<SignerMiddleware<Provider<Http>>, SignerMiddleware<Provider<Http>>>::new(contract_address, client.clone());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 1 generic argument\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this generic argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: struct defined here, with 1 generic parameter: `M`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:9:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mabigen!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Oracle,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    r#\"[\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ]\"#\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct takes 2 generic arguments but 1 generic argument was supplied","code":{"code":"E0107","explanation":"An incorrect number of generic arguments was provided.\n\nErroneous code example:\n\n```compile_fail,E0107\nstruct Foo<T> { x: T }\n\nstruct Bar { x: Foo }             // error: wrong number of type arguments:\n                                  //        expected 1, found 0\nstruct Baz<S, T> { x: Foo<S, T> } // error: wrong number of type arguments:\n                                  //        expected 1, found 2\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool>(x);                 // error: wrong number of type arguments:\n                                    //        expected 2, found 1\n    foo::<bool, i32, i32>(x, 2, 4); // error: wrong number of type arguments:\n                                    //        expected 2, found 3\n    f::<'static>();                 // error: wrong number of lifetime arguments\n                                    //        expected 0, found 1\n}\n```\n\nWhen using/declaring an item with generic arguments, you must provide the exact\nsame number:\n\n```\nstruct Foo<T> { x: T }\n\nstruct Bar<T> { x: Foo<T> }               // ok!\nstruct Baz<S, T> { x: Foo<S>, y: Foo<T> } // ok!\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool, u32>(x, 12);              // ok!\n    f();                                  // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":6339,"byte_end":6355,"line_start":213,"line_end":213,"column_start":29,"column_end":45,"is_primary":true,"text":[{"text":"    let contract = Oracle::<SignerMiddleware<Provider<Http>>, SignerMiddleware<Provider<Http>>>::new(contract_address, client.clone());","highlight_start":29,"highlight_end":45}],"label":"expected 2 generic arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":6356,"byte_end":6370,"line_start":213,"line_end":213,"column_start":46,"column_end":60,"is_primary":false,"text":[{"text":"    let contract = Oracle::<SignerMiddleware<Provider<Http>>, SignerMiddleware<Provider<Http>>>::new(contract_address, client.clone());","highlight_start":46,"highlight_end":60}],"label":"supplied 1 generic argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"struct defined here, with 2 generic parameters: `M`, `S`","code":null,"level":"note","spans":[{"file_name":"/Users/rayer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ethers-middleware-2.0.14/src/signer.rs","byte_start":2425,"byte_end":2426,"line_start":62,"line_end":62,"column_start":29,"column_end":30,"is_primary":false,"text":[{"text":"pub struct SignerMiddleware<M, S> {","highlight_start":29,"highlight_end":30}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/rayer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ethers-middleware-2.0.14/src/signer.rs","byte_start":2428,"byte_end":2429,"line_start":62,"line_end":62,"column_start":32,"column_end":33,"is_primary":false,"text":[{"text":"pub struct SignerMiddleware<M, S> {","highlight_start":32,"highlight_end":33}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/rayer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ethers-middleware-2.0.14/src/signer.rs","byte_start":2408,"byte_end":2424,"line_start":62,"line_end":62,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"pub struct SignerMiddleware<M, S> {","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"add missing generic argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":6370,"byte_end":6370,"line_start":213,"line_end":213,"column_start":60,"column_end":60,"is_primary":true,"text":[{"text":"    let contract = Oracle::<SignerMiddleware<Provider<Http>>, SignerMiddleware<Provider<Http>>>::new(contract_address, client.clone());","highlight_start":60,"highlight_end":60}],"label":null,"suggested_replacement":", S","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0107]\u001b[0m\u001b[0m\u001b[1m: struct takes 2 generic arguments but 1 generic argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:213:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m213\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let contract = Oracle::<SignerMiddleware<Provider<Http>>, SignerMiddleware<Provider<Http>>>::new(contract_address, client.clone());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msupplied 1 generic argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 2 generic arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: struct defined here, with 2 generic parameters: `M`, `S`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/rayer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ethers-middleware-2.0.14/src/signer.rs:62:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct SignerMiddleware<M, S> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: add missing generic argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m213\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let contract = Oracle::<SignerMiddleware<Provider<Http>\u001b[0m\u001b[0m\u001b[38;5;10m, S\u001b[0m\u001b[0m>, SignerMiddleware<Provider<Http>>>::new(contract_address, client.clone());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                            \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"ambiguous associated type","code":{"code":"E0223","explanation":"An attempt was made to retrieve an associated type, but the type was ambiguous.\n\nErroneous code example:\n\n```compile_fail,E0223\ntrait Trait { type X; }\n\nfn main() {\n    let foo: Trait::X;\n}\n```\n\nThe problem here is that we're attempting to take the associated type of `X`\nfrom `Trait`. Unfortunately, the type of `X` is not defined, because it's only\nmade concrete in implementations of the trait. A working version of this code\nmight look like:\n\n```\ntrait Trait { type X; }\n\nstruct Struct;\nimpl Trait for Struct {\n    type X = u32;\n}\n\nfn main() {\n    let foo: <Struct as Trait>::X;\n}\n```\n\nThis syntax specifies that we want the associated type `X` from `Struct`'s\nimplementation of `Trait`.\n\nDue to internal limitations of the current compiler implementation we cannot\nsimply use `Struct::X`.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":6599,"byte_end":6618,"line_start":219,"line_end":219,"column_start":21,"column_end":40,"is_primary":true,"text":[{"text":"        .map(|node| Oracle::AstNodeInfo {","highlight_start":21,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if there were a trait named `Example` with associated type `AstNodeInfo` implemented for `oracle::Oracle<_>`, you could use the fully-qualified path","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":6599,"byte_end":6618,"line_start":219,"line_end":219,"column_start":21,"column_end":40,"is_primary":true,"text":[{"text":"        .map(|node| Oracle::AstNodeInfo {","highlight_start":21,"highlight_end":40}],"label":null,"suggested_replacement":"<oracle::Oracle<_> as Example>::AstNodeInfo","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0223]\u001b[0m\u001b[0m\u001b[1m: ambiguous associated type\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:219:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .map(|node| Oracle::AstNodeInfo {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if there were a trait named `Example` with associated type `AstNodeInfo` implemented for `oracle::Oracle<_>`, you could use the fully-qualified path\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        .map(|node| \u001b[0m\u001b[0m\u001b[38;5;10m<oracle::Oracle<_> as Example>::AstNodeInfo\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"missing generics for struct `oracle::Oracle`","code":{"code":"E0107","explanation":"An incorrect number of generic arguments was provided.\n\nErroneous code example:\n\n```compile_fail,E0107\nstruct Foo<T> { x: T }\n\nstruct Bar { x: Foo }             // error: wrong number of type arguments:\n                                  //        expected 1, found 0\nstruct Baz<S, T> { x: Foo<S, T> } // error: wrong number of type arguments:\n                                  //        expected 1, found 2\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool>(x);                 // error: wrong number of type arguments:\n                                    //        expected 2, found 1\n    foo::<bool, i32, i32>(x, 2, 4); // error: wrong number of type arguments:\n                                    //        expected 2, found 3\n    f::<'static>();                 // error: wrong number of lifetime arguments\n                                    //        expected 0, found 1\n}\n```\n\nWhen using/declaring an item with generic arguments, you must provide the exact\nsame number:\n\n```\nstruct Foo<T> { x: T }\n\nstruct Bar<T> { x: Foo<T> }               // ok!\nstruct Baz<S, T> { x: Foo<S>, y: Foo<T> } // ok!\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool, u32>(x, 12);              // ok!\n    f();                                  // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":7709,"byte_end":7715,"line_start":249,"line_end":249,"column_start":24,"column_end":30,"is_primary":true,"text":[{"text":"    let ast_nodes: Vec<Oracle::AstNodeInfo> = data","highlight_start":24,"highlight_end":30}],"label":"expected 1 generic argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"struct defined here, with 1 generic parameter: `M`","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":184,"byte_end":5647,"line_start":8,"line_end":189,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"abigen!(","highlight_start":1,"highlight_end":9},{"text":"    Oracle,","highlight_start":1,"highlight_end":12},{"text":"    r#\"[","highlight_start":1,"highlight_end":9},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"constructor\",","highlight_start":1,"highlight_end":35},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"stateMutability\": \"nonpayable\"","highlight_start":1,"highlight_end":44},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"FEE\",","highlight_start":1,"highlight_end":27},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"\",","highlight_start":1,"highlight_end":32},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"admin\",","highlight_start":1,"highlight_end":29},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"\",","highlight_start":1,"highlight_end":32},{"text":"                    \"type\": \"address\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"address\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"adminComputeResult\",","highlight_start":1,"highlight_end":42},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"computeId\",","highlight_start":1,"highlight_end":41},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"callback\",","highlight_start":1,"highlight_end":32},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"astnodes\",","highlight_start":1,"highlight_end":40},{"text":"                    \"type\": \"tuple[]\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"struct AstNode.Info[]\",","highlight_start":1,"highlight_end":61},{"text":"                    \"components\": [","highlight_start":1,"highlight_end":36},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"nodeType\",","highlight_start":1,"highlight_end":48},{"text":"                            \"type\": \"uint8\",","highlight_start":1,"highlight_end":45},{"text":"                            \"internalType\": \"enum AstNode.NodeType\"","highlight_start":1,"highlight_end":68},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"value\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"string\",","highlight_start":1,"highlight_end":46},{"text":"                            \"internalType\": \"string\"","highlight_start":1,"highlight_end":53},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"left\",","highlight_start":1,"highlight_end":44},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"right\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    ]","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"outputs\": [],","highlight_start":1,"highlight_end":27},{"text":"            \"stateMutability\": \"nonpayable\"","highlight_start":1,"highlight_end":44},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"compute\",","highlight_start":1,"highlight_end":31},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"astnodes\",","highlight_start":1,"highlight_end":40},{"text":"                    \"type\": \"tuple[]\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"struct AstNode.Info[]\",","highlight_start":1,"highlight_end":61},{"text":"                    \"components\": [","highlight_start":1,"highlight_end":36},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"nodeType\",","highlight_start":1,"highlight_end":48},{"text":"                            \"type\": \"uint8\",","highlight_start":1,"highlight_end":45},{"text":"                            \"internalType\": \"enum AstNode.NodeType\"","highlight_start":1,"highlight_end":68},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"value\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"string\",","highlight_start":1,"highlight_end":46},{"text":"                            \"internalType\": \"string\"","highlight_start":1,"highlight_end":53},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"left\",","highlight_start":1,"highlight_end":44},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"right\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    ]","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"payable\"","highlight_start":1,"highlight_end":41},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"computeId\",","highlight_start":1,"highlight_end":33},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"\",","highlight_start":1,"highlight_end":32},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"event\",","highlight_start":1,"highlight_end":29},{"text":"            \"name\": \"AdminCompute\",","highlight_start":1,"highlight_end":36},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"computeId\",","highlight_start":1,"highlight_end":41},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": true,","highlight_start":1,"highlight_end":37},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": false,","highlight_start":1,"highlight_end":38},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"anonymous\": false","highlight_start":1,"highlight_end":31},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"event\",","highlight_start":1,"highlight_end":29},{"text":"            \"name\": \"UserCompute\",","highlight_start":1,"highlight_end":35},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"userAddress\",","highlight_start":1,"highlight_end":43},{"text":"                    \"type\": \"address\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": true,","highlight_start":1,"highlight_end":37},{"text":"                    \"internalType\": \"address\"","highlight_start":1,"highlight_end":46},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": false,","highlight_start":1,"highlight_end":38},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"anonymous\": false","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ]\"#","highlight_start":1,"highlight_end":8},{"text":");","highlight_start":1,"highlight_end":2}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":184,"byte_end":5647,"line_start":8,"line_end":189,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"abigen!(","highlight_start":1,"highlight_end":9},{"text":"    Oracle,","highlight_start":1,"highlight_end":12},{"text":"    r#\"[","highlight_start":1,"highlight_end":9},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"constructor\",","highlight_start":1,"highlight_end":35},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"stateMutability\": \"nonpayable\"","highlight_start":1,"highlight_end":44},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"FEE\",","highlight_start":1,"highlight_end":27},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"\",","highlight_start":1,"highlight_end":32},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"admin\",","highlight_start":1,"highlight_end":29},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"\",","highlight_start":1,"highlight_end":32},{"text":"                    \"type\": \"address\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"address\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"adminComputeResult\",","highlight_start":1,"highlight_end":42},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"computeId\",","highlight_start":1,"highlight_end":41},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"callback\",","highlight_start":1,"highlight_end":32},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"astnodes\",","highlight_start":1,"highlight_end":40},{"text":"                    \"type\": \"tuple[]\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"struct AstNode.Info[]\",","highlight_start":1,"highlight_end":61},{"text":"                    \"components\": [","highlight_start":1,"highlight_end":36},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"nodeType\",","highlight_start":1,"highlight_end":48},{"text":"                            \"type\": \"uint8\",","highlight_start":1,"highlight_end":45},{"text":"                            \"internalType\": \"enum AstNode.NodeType\"","highlight_start":1,"highlight_end":68},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"value\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"string\",","highlight_start":1,"highlight_end":46},{"text":"                            \"internalType\": \"string\"","highlight_start":1,"highlight_end":53},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"left\",","highlight_start":1,"highlight_end":44},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"right\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    ]","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"outputs\": [],","highlight_start":1,"highlight_end":27},{"text":"            \"stateMutability\": \"nonpayable\"","highlight_start":1,"highlight_end":44},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"compute\",","highlight_start":1,"highlight_end":31},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"astnodes\",","highlight_start":1,"highlight_end":40},{"text":"                    \"type\": \"tuple[]\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"struct AstNode.Info[]\",","highlight_start":1,"highlight_end":61},{"text":"                    \"components\": [","highlight_start":1,"highlight_end":36},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"nodeType\",","highlight_start":1,"highlight_end":48},{"text":"                            \"type\": \"uint8\",","highlight_start":1,"highlight_end":45},{"text":"                            \"internalType\": \"enum AstNode.NodeType\"","highlight_start":1,"highlight_end":68},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"value\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"string\",","highlight_start":1,"highlight_end":46},{"text":"                            \"internalType\": \"string\"","highlight_start":1,"highlight_end":53},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"left\",","highlight_start":1,"highlight_end":44},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"right\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    ]","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"payable\"","highlight_start":1,"highlight_end":41},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"computeId\",","highlight_start":1,"highlight_end":33},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"\",","highlight_start":1,"highlight_end":32},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"event\",","highlight_start":1,"highlight_end":29},{"text":"            \"name\": \"AdminCompute\",","highlight_start":1,"highlight_end":36},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"computeId\",","highlight_start":1,"highlight_end":41},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": true,","highlight_start":1,"highlight_end":37},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": false,","highlight_start":1,"highlight_end":38},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"anonymous\": false","highlight_start":1,"highlight_end":31},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"event\",","highlight_start":1,"highlight_end":29},{"text":"            \"name\": \"UserCompute\",","highlight_start":1,"highlight_end":35},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"userAddress\",","highlight_start":1,"highlight_end":43},{"text":"                    \"type\": \"address\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": true,","highlight_start":1,"highlight_end":37},{"text":"                    \"internalType\": \"address\"","highlight_start":1,"highlight_end":46},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": false,","highlight_start":1,"highlight_end":38},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"anonymous\": false","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ]\"#","highlight_start":1,"highlight_end":8},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"abigen!","def_site_span":{"file_name":"/Users/rayer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ethers-contract-derive-2.0.14/src/lib.rs","byte_start":3723,"byte_end":3771,"line_start":114,"line_end":114,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"pub fn abigen(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":197,"byte_end":203,"line_start":9,"line_end":9,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    Oracle,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"add missing generic argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":7715,"byte_end":7715,"line_start":249,"line_end":249,"column_start":30,"column_end":30,"is_primary":true,"text":[{"text":"    let ast_nodes: Vec<Oracle::AstNodeInfo> = data","highlight_start":30,"highlight_end":30}],"label":null,"suggested_replacement":"<M>","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0107]\u001b[0m\u001b[0m\u001b[1m: missing generics for struct `oracle::Oracle`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:249:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m249\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let ast_nodes: Vec<Oracle::AstNodeInfo> = data\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 1 generic argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: struct defined here, with 1 generic parameter: `M`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:9:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mabigen!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Oracle,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    r#\"[\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ]\"#\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: add missing generic argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m249\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let ast_nodes: Vec<Oracle\u001b[0m\u001b[0m\u001b[38;5;10m<M>\u001b[0m\u001b[0m::AstNodeInfo> = data\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct takes 1 generic argument but 2 generic arguments were supplied","code":{"code":"E0107","explanation":"An incorrect number of generic arguments was provided.\n\nErroneous code example:\n\n```compile_fail,E0107\nstruct Foo<T> { x: T }\n\nstruct Bar { x: Foo }             // error: wrong number of type arguments:\n                                  //        expected 1, found 0\nstruct Baz<S, T> { x: Foo<S, T> } // error: wrong number of type arguments:\n                                  //        expected 1, found 2\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool>(x);                 // error: wrong number of type arguments:\n                                    //        expected 2, found 1\n    foo::<bool, i32, i32>(x, 2, 4); // error: wrong number of type arguments:\n                                    //        expected 2, found 3\n    f::<'static>();                 // error: wrong number of lifetime arguments\n                                    //        expected 0, found 1\n}\n```\n\nWhen using/declaring an item with generic arguments, you must provide the exact\nsame number:\n\n```\nstruct Foo<T> { x: T }\n\nstruct Bar<T> { x: Foo<T> }               // ok!\nstruct Baz<S, T> { x: Foo<S>, y: Foo<T> } // ok!\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool, u32>(x, 12);              // ok!\n    f();                                  // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":7523,"byte_end":7529,"line_start":246,"line_end":246,"column_start":20,"column_end":26,"is_primary":true,"text":[{"text":"    let contract = Oracle::<SignerMiddleware<Provider<Http>>, SignerMiddleware<Provider<Http>>>::new(contract_address, client.clone());","highlight_start":20,"highlight_end":26}],"label":"expected 1 generic argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"struct defined here, with 1 generic parameter: `M`","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":184,"byte_end":5647,"line_start":8,"line_end":189,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"abigen!(","highlight_start":1,"highlight_end":9},{"text":"    Oracle,","highlight_start":1,"highlight_end":12},{"text":"    r#\"[","highlight_start":1,"highlight_end":9},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"constructor\",","highlight_start":1,"highlight_end":35},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"stateMutability\": \"nonpayable\"","highlight_start":1,"highlight_end":44},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"FEE\",","highlight_start":1,"highlight_end":27},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"\",","highlight_start":1,"highlight_end":32},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"admin\",","highlight_start":1,"highlight_end":29},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"\",","highlight_start":1,"highlight_end":32},{"text":"                    \"type\": \"address\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"address\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"adminComputeResult\",","highlight_start":1,"highlight_end":42},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"computeId\",","highlight_start":1,"highlight_end":41},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"callback\",","highlight_start":1,"highlight_end":32},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"astnodes\",","highlight_start":1,"highlight_end":40},{"text":"                    \"type\": \"tuple[]\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"struct AstNode.Info[]\",","highlight_start":1,"highlight_end":61},{"text":"                    \"components\": [","highlight_start":1,"highlight_end":36},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"nodeType\",","highlight_start":1,"highlight_end":48},{"text":"                            \"type\": \"uint8\",","highlight_start":1,"highlight_end":45},{"text":"                            \"internalType\": \"enum AstNode.NodeType\"","highlight_start":1,"highlight_end":68},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"value\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"string\",","highlight_start":1,"highlight_end":46},{"text":"                            \"internalType\": \"string\"","highlight_start":1,"highlight_end":53},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"left\",","highlight_start":1,"highlight_end":44},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"right\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    ]","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"outputs\": [],","highlight_start":1,"highlight_end":27},{"text":"            \"stateMutability\": \"nonpayable\"","highlight_start":1,"highlight_end":44},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"compute\",","highlight_start":1,"highlight_end":31},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"astnodes\",","highlight_start":1,"highlight_end":40},{"text":"                    \"type\": \"tuple[]\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"struct AstNode.Info[]\",","highlight_start":1,"highlight_end":61},{"text":"                    \"components\": [","highlight_start":1,"highlight_end":36},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"nodeType\",","highlight_start":1,"highlight_end":48},{"text":"                            \"type\": \"uint8\",","highlight_start":1,"highlight_end":45},{"text":"                            \"internalType\": \"enum AstNode.NodeType\"","highlight_start":1,"highlight_end":68},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"value\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"string\",","highlight_start":1,"highlight_end":46},{"text":"                            \"internalType\": \"string\"","highlight_start":1,"highlight_end":53},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"left\",","highlight_start":1,"highlight_end":44},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"right\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    ]","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"payable\"","highlight_start":1,"highlight_end":41},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"computeId\",","highlight_start":1,"highlight_end":33},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"\",","highlight_start":1,"highlight_end":32},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"event\",","highlight_start":1,"highlight_end":29},{"text":"            \"name\": \"AdminCompute\",","highlight_start":1,"highlight_end":36},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"computeId\",","highlight_start":1,"highlight_end":41},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": true,","highlight_start":1,"highlight_end":37},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": false,","highlight_start":1,"highlight_end":38},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"anonymous\": false","highlight_start":1,"highlight_end":31},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"event\",","highlight_start":1,"highlight_end":29},{"text":"            \"name\": \"UserCompute\",","highlight_start":1,"highlight_end":35},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"userAddress\",","highlight_start":1,"highlight_end":43},{"text":"                    \"type\": \"address\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": true,","highlight_start":1,"highlight_end":37},{"text":"                    \"internalType\": \"address\"","highlight_start":1,"highlight_end":46},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": false,","highlight_start":1,"highlight_end":38},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"anonymous\": false","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ]\"#","highlight_start":1,"highlight_end":8},{"text":");","highlight_start":1,"highlight_end":2}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":184,"byte_end":5647,"line_start":8,"line_end":189,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"abigen!(","highlight_start":1,"highlight_end":9},{"text":"    Oracle,","highlight_start":1,"highlight_end":12},{"text":"    r#\"[","highlight_start":1,"highlight_end":9},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"constructor\",","highlight_start":1,"highlight_end":35},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"stateMutability\": \"nonpayable\"","highlight_start":1,"highlight_end":44},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"FEE\",","highlight_start":1,"highlight_end":27},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"\",","highlight_start":1,"highlight_end":32},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"admin\",","highlight_start":1,"highlight_end":29},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"\",","highlight_start":1,"highlight_end":32},{"text":"                    \"type\": \"address\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"address\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"adminComputeResult\",","highlight_start":1,"highlight_end":42},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"computeId\",","highlight_start":1,"highlight_end":41},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"callback\",","highlight_start":1,"highlight_end":32},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"astnodes\",","highlight_start":1,"highlight_end":40},{"text":"                    \"type\": \"tuple[]\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"struct AstNode.Info[]\",","highlight_start":1,"highlight_end":61},{"text":"                    \"components\": [","highlight_start":1,"highlight_end":36},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"nodeType\",","highlight_start":1,"highlight_end":48},{"text":"                            \"type\": \"uint8\",","highlight_start":1,"highlight_end":45},{"text":"                            \"internalType\": \"enum AstNode.NodeType\"","highlight_start":1,"highlight_end":68},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"value\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"string\",","highlight_start":1,"highlight_end":46},{"text":"                            \"internalType\": \"string\"","highlight_start":1,"highlight_end":53},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"left\",","highlight_start":1,"highlight_end":44},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"right\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    ]","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"outputs\": [],","highlight_start":1,"highlight_end":27},{"text":"            \"stateMutability\": \"nonpayable\"","highlight_start":1,"highlight_end":44},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"compute\",","highlight_start":1,"highlight_end":31},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"astnodes\",","highlight_start":1,"highlight_end":40},{"text":"                    \"type\": \"tuple[]\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"struct AstNode.Info[]\",","highlight_start":1,"highlight_end":61},{"text":"                    \"components\": [","highlight_start":1,"highlight_end":36},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"nodeType\",","highlight_start":1,"highlight_end":48},{"text":"                            \"type\": \"uint8\",","highlight_start":1,"highlight_end":45},{"text":"                            \"internalType\": \"enum AstNode.NodeType\"","highlight_start":1,"highlight_end":68},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"value\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"string\",","highlight_start":1,"highlight_end":46},{"text":"                            \"internalType\": \"string\"","highlight_start":1,"highlight_end":53},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"left\",","highlight_start":1,"highlight_end":44},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            \"name\": \"right\",","highlight_start":1,"highlight_end":45},{"text":"                            \"type\": \"uint256\",","highlight_start":1,"highlight_end":47},{"text":"                            \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":54},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    ]","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"payable\"","highlight_start":1,"highlight_end":41},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"function\",","highlight_start":1,"highlight_end":32},{"text":"            \"name\": \"computeId\",","highlight_start":1,"highlight_end":33},{"text":"            \"inputs\": [],","highlight_start":1,"highlight_end":26},{"text":"            \"outputs\": [","highlight_start":1,"highlight_end":25},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"\",","highlight_start":1,"highlight_end":32},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"stateMutability\": \"view\"","highlight_start":1,"highlight_end":38},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"event\",","highlight_start":1,"highlight_end":29},{"text":"            \"name\": \"AdminCompute\",","highlight_start":1,"highlight_end":36},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"computeId\",","highlight_start":1,"highlight_end":41},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": true,","highlight_start":1,"highlight_end":37},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": false,","highlight_start":1,"highlight_end":38},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"anonymous\": false","highlight_start":1,"highlight_end":31},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            \"type\": \"event\",","highlight_start":1,"highlight_end":29},{"text":"            \"name\": \"UserCompute\",","highlight_start":1,"highlight_end":35},{"text":"            \"inputs\": [","highlight_start":1,"highlight_end":24},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"userAddress\",","highlight_start":1,"highlight_end":43},{"text":"                    \"type\": \"address\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": true,","highlight_start":1,"highlight_end":37},{"text":"                    \"internalType\": \"address\"","highlight_start":1,"highlight_end":46},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    \"name\": \"result\",","highlight_start":1,"highlight_end":38},{"text":"                    \"type\": \"uint256\",","highlight_start":1,"highlight_end":39},{"text":"                    \"indexed\": false,","highlight_start":1,"highlight_end":38},{"text":"                    \"internalType\": \"uint256\"","highlight_start":1,"highlight_end":46},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ],","highlight_start":1,"highlight_end":15},{"text":"            \"anonymous\": false","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ]\"#","highlight_start":1,"highlight_end":8},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"abigen!","def_site_span":{"file_name":"/Users/rayer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ethers-contract-derive-2.0.14/src/lib.rs","byte_start":3723,"byte_end":3771,"line_start":114,"line_end":114,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"pub fn abigen(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":197,"byte_end":203,"line_start":9,"line_end":9,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    Oracle,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove this generic argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":7566,"byte_end":7598,"line_start":246,"line_end":246,"column_start":63,"column_end":95,"is_primary":true,"text":[{"text":"    let contract = Oracle::<SignerMiddleware<Provider<Http>>, SignerMiddleware<Provider<Http>>>::new(contract_address, client.clone());","highlight_start":63,"highlight_end":95}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0107]\u001b[0m\u001b[0m\u001b[1m: struct takes 1 generic argument but 2 generic arguments were supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:246:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m246\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let contract = Oracle::<SignerMiddleware<Provider<Http>>, SignerMiddleware<Provider<Http>>>::new(contract_address, client.clone());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 1 generic argument\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this generic argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: struct defined here, with 1 generic parameter: `M`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:9:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mabigen!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Oracle,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    r#\"[\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ]\"#\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct takes 2 generic arguments but 1 generic argument was supplied","code":{"code":"E0107","explanation":"An incorrect number of generic arguments was provided.\n\nErroneous code example:\n\n```compile_fail,E0107\nstruct Foo<T> { x: T }\n\nstruct Bar { x: Foo }             // error: wrong number of type arguments:\n                                  //        expected 1, found 0\nstruct Baz<S, T> { x: Foo<S, T> } // error: wrong number of type arguments:\n                                  //        expected 1, found 2\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool>(x);                 // error: wrong number of type arguments:\n                                    //        expected 2, found 1\n    foo::<bool, i32, i32>(x, 2, 4); // error: wrong number of type arguments:\n                                    //        expected 2, found 3\n    f::<'static>();                 // error: wrong number of lifetime arguments\n                                    //        expected 0, found 1\n}\n```\n\nWhen using/declaring an item with generic arguments, you must provide the exact\nsame number:\n\n```\nstruct Foo<T> { x: T }\n\nstruct Bar<T> { x: Foo<T> }               // ok!\nstruct Baz<S, T> { x: Foo<S>, y: Foo<T> } // ok!\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool, u32>(x, 12);              // ok!\n    f();                                  // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":7532,"byte_end":7548,"line_start":246,"line_end":246,"column_start":29,"column_end":45,"is_primary":true,"text":[{"text":"    let contract = Oracle::<SignerMiddleware<Provider<Http>>, SignerMiddleware<Provider<Http>>>::new(contract_address, client.clone());","highlight_start":29,"highlight_end":45}],"label":"expected 2 generic arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":7549,"byte_end":7563,"line_start":246,"line_end":246,"column_start":46,"column_end":60,"is_primary":false,"text":[{"text":"    let contract = Oracle::<SignerMiddleware<Provider<Http>>, SignerMiddleware<Provider<Http>>>::new(contract_address, client.clone());","highlight_start":46,"highlight_end":60}],"label":"supplied 1 generic argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"struct defined here, with 2 generic parameters: `M`, `S`","code":null,"level":"note","spans":[{"file_name":"/Users/rayer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ethers-middleware-2.0.14/src/signer.rs","byte_start":2425,"byte_end":2426,"line_start":62,"line_end":62,"column_start":29,"column_end":30,"is_primary":false,"text":[{"text":"pub struct SignerMiddleware<M, S> {","highlight_start":29,"highlight_end":30}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/rayer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ethers-middleware-2.0.14/src/signer.rs","byte_start":2428,"byte_end":2429,"line_start":62,"line_end":62,"column_start":32,"column_end":33,"is_primary":false,"text":[{"text":"pub struct SignerMiddleware<M, S> {","highlight_start":32,"highlight_end":33}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/rayer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ethers-middleware-2.0.14/src/signer.rs","byte_start":2408,"byte_end":2424,"line_start":62,"line_end":62,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"pub struct SignerMiddleware<M, S> {","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"add missing generic argument","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":7563,"byte_end":7563,"line_start":246,"line_end":246,"column_start":60,"column_end":60,"is_primary":true,"text":[{"text":"    let contract = Oracle::<SignerMiddleware<Provider<Http>>, SignerMiddleware<Provider<Http>>>::new(contract_address, client.clone());","highlight_start":60,"highlight_end":60}],"label":null,"suggested_replacement":", S","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0107]\u001b[0m\u001b[0m\u001b[1m: struct takes 2 generic arguments but 1 generic argument was supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:246:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m246\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let contract = Oracle::<SignerMiddleware<Provider<Http>>, SignerMiddleware<Provider<Http>>>::new(contract_address, client.clone());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msupplied 1 generic argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 2 generic arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: struct defined here, with 2 generic parameters: `M`, `S`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/rayer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ethers-middleware-2.0.14/src/signer.rs:62:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct SignerMiddleware<M, S> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: add missing generic argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m246\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let contract = Oracle::<SignerMiddleware<Provider<Http>\u001b[0m\u001b[0m\u001b[38;5;10m, S\u001b[0m\u001b[0m>, SignerMiddleware<Provider<Http>>>::new(contract_address, client.clone());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                            \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"ambiguous associated type","code":{"code":"E0223","explanation":"An attempt was made to retrieve an associated type, but the type was ambiguous.\n\nErroneous code example:\n\n```compile_fail,E0223\ntrait Trait { type X; }\n\nfn main() {\n    let foo: Trait::X;\n}\n```\n\nThe problem here is that we're attempting to take the associated type of `X`\nfrom `Trait`. Unfortunately, the type of `X` is not defined, because it's only\nmade concrete in implementations of the trait. A working version of this code\nmight look like:\n\n```\ntrait Trait { type X; }\n\nstruct Struct;\nimpl Trait for Struct {\n    type X = u32;\n}\n\nfn main() {\n    let foo: <Struct as Trait>::X;\n}\n```\n\nThis syntax specifies that we want the associated type `X` from `Struct`'s\nimplementation of `Trait`.\n\nDue to internal limitations of the current compiler implementation we cannot\nsimply use `Struct::X`.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":7792,"byte_end":7811,"line_start":252,"line_end":252,"column_start":21,"column_end":40,"is_primary":true,"text":[{"text":"        .map(|node| Oracle::AstNodeInfo {","highlight_start":21,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if there were a trait named `Example` with associated type `AstNodeInfo` implemented for `oracle::Oracle<_>`, you could use the fully-qualified path","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":7792,"byte_end":7811,"line_start":252,"line_end":252,"column_start":21,"column_end":40,"is_primary":true,"text":[{"text":"        .map(|node| Oracle::AstNodeInfo {","highlight_start":21,"highlight_end":40}],"label":null,"suggested_replacement":"<oracle::Oracle<_> as Example>::AstNodeInfo","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0223]\u001b[0m\u001b[0m\u001b[1m: ambiguous associated type\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:252:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .map(|node| Oracle::AstNodeInfo {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if there were a trait named `Example` with associated type `AstNodeInfo` implemented for `oracle::Oracle<_>`, you could use the fully-qualified path\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        .map(|node| \u001b[0m\u001b[0m\u001b[38;5;10m<oracle::Oracle<_> as Example>::AstNodeInfo\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 8 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 8 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0107, E0223.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0107, E0223.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0107`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0107`.\u001b[0m\n"}
